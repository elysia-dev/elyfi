{
  "address": "0xB560715645D6e095c1101E00ebC0012AE9D32B68",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NewCSPAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NewCouncilAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "UpdateAdmin",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addCSP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addCouncil",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isCSP",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isCouncil",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMoneyPool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa1aac25e684ef0ab462918e73fc669441be8f0ddfd1f12de7daf50cf65282188",
  "receipt": {
    "to": null,
    "from": "0x41F82A050De679C2bF59aE81744d48E03cEBeA19",
    "contractAddress": "0xB560715645D6e095c1101E00ebC0012AE9D32B68",
    "transactionIndex": 1,
    "gasUsed": "177865",
    "logsBloom": "0x
    "blockHash": "0xa2d289f79555ac8505e5f85e436f18c90433bc184205a6fc45f037d97dcd5207",
    "transactionHash": "0xa1aac25e684ef0ab462918e73fc669441be8f0ddfd1f12de7daf50cf65282188",
    "logs": [],
    "blockNumber": 25313955,
    "cumulativeGasUsed": "391076",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "6384bc112e4cb10a01932abc66540276",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NewCSPAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NewCouncilAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"UpdateAdmin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addCSP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addCouncil\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isCSP\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isCouncil\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMoneyPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ELYSIA\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ELYFI Connector\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Connector.sol\":\"Connector\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Connector.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport './libraries/Role.sol';\\nimport './ConnectorStorage.sol';\\nimport './interfaces/IConnector.sol';\\n\\n/**\\n * @title ELYFI Connector\\n * @author ELYSIA\\n */\\ncontract Connector is IConnector, ConnectorStorage {\\n  constructor() {}\\n\\n  function addCouncil(address account) external {\\n    _grantRole(Role.COUNCIL, account);\\n    emit NewCouncilAdded(account);\\n  }\\n\\n  function addCSP(address account) external {\\n    _grantRole(Role.CSP, account);\\n    emit NewCSPAdded(account);\\n  }\\n\\n  function setAdmin(address account) external {\\n    _grantRole(Role.MONEYPOOL_ADMIN, account);\\n    emit UpdateAdmin(account);\\n  }\\n\\n  function _grantRole(bytes32 role, address account) internal {\\n    _roles[role].participants[account] = true;\\n  }\\n\\n  function _revokeRole(bytes32 role, address account) internal {\\n    _roles[role].participants[account] = false;\\n  }\\n\\n  function _hasRole(bytes32 role, address account) internal view returns (bool) {\\n    return _roles[role].participants[account];\\n  }\\n\\n  function isMoneyPool(address account) external view override returns (bool) {}\\n\\n  function isCSP(address account) external view override returns (bool) {}\\n\\n  function isCouncil(address account) external view override returns (bool) {}\\n}\\n\",\"keccak256\":\"0xb450f70f0f332a5414d28227acebbe95082ab029f9bd633b40a6d623b812cfb9\",\"license\":\"MIT\"},\"contracts/ConnectorStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\n/**\\n * @title ELYFI Connector storage\\n * @author ELYSIA\\n */\\ncontract ConnectorStorage {\\n  struct RoleData {\\n    mapping(address => bool) participants;\\n    bytes32 admin;\\n  }\\n\\n  mapping(bytes32 => RoleData) internal _roles;\\n}\\n\",\"keccak256\":\"0x549483ba21042b18d318a54adec1e722d3e7c64078a657affb881be74b9e0768\",\"license\":\"MIT\"},\"contracts/interfaces/IConnector.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport '../libraries/DataStruct.sol';\\n\\ninterface IConnector {\\n  event NewCouncilAdded(address indexed account);\\n  event NewCSPAdded(address indexed account);\\n  event UpdateAdmin(address indexed account);\\n\\n  function isMoneyPool(address account) external view returns (bool);\\n\\n  function isCSP(address account) external view returns (bool);\\n\\n  function isCouncil(address account) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x66f9570acc217692367a1ab686db248d7b92b50e1dead258fabba7cf23afaf55\",\"license\":\"MIT\"},\"contracts/libraries/DataStruct.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nlibrary DataStruct {\\n  /**\\n    @notice The main reserve data struct.\\n   */\\n  struct ReserveData {\\n    uint256 moneyPoolFactor;\\n    uint256 lTokenInterestIndex;\\n    uint256 borrowAPR;\\n    uint256 supplyAPR;\\n    uint256 totalDepositedAssetBondCount;\\n    uint256 lastUpdateTimestamp;\\n    address lTokenAddress;\\n    address dTokenAddress;\\n    address interestModelAddress;\\n    address tokenizerAddress;\\n    uint8 id;\\n    bool isPaused;\\n    bool isActivated;\\n  }\\n\\n  /**\\n   * @notice The asset bond data struct.\\n   * @param ipfsHash The IPFS hash that contains the informations and contracts\\n   * between Collateral Service Provider and lender.\\n   * @param maturityDate The amount of time measured in seconds that can elapse\\n   * before the NPL company liquidate the loan and seize the asset bond collateral.\\n   * @param borrower The address of the borrower.\\n   */\\n  struct AssetBondData {\\n    address asset;\\n    address borrower;\\n    address lawfirm;\\n    string ipfsHash; // refactor : gas\\n    uint256 collateralValue;\\n    uint256 borrowAPR;\\n    uint256 sign; // refactor : apply oz - sign\\n    uint256 issuanceDate;\\n    uint256 dueDate;\\n    uint256 maturityDate;\\n    uint256 lastUpdateTimestamp;\\n    AssetBondState state;\\n  }\\n\\n  /**\\n    @notice The states of asset bond\\n    * EMPTY: After\\n    * SETTLED:\\n    * CONFIRMED:\\n    * COLLATERALIZED:\\n    * MATURED:\\n   */\\n  enum AssetBondState {EMPTY, SETTLED, CONFIRMED, COLLATERALIZED, MATURED, NOT_PERFORMED}\\n\\n  struct TokenizerData {\\n    address asset;\\n    uint256 averageATokenAPR;\\n    uint256 totalATokenSupply;\\n    uint256 lastUpdateTimestamp;\\n  }\\n}\\n\",\"keccak256\":\"0xcbcc25b812cd805fa7a93882b934912fe797dc7c9f3298a5256f2c00eb6e2833\",\"license\":\"MIT\"},\"contracts/libraries/Role.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\n/**\\n * @title ELYFI Role\\n * @author ELYSIA\\n */\\nlibrary Role {\\n  bytes32 internal constant CSP = 'CSP';\\n  bytes32 internal constant COUNCIL = 'COUNCIL';\\n  bytes32 internal constant MONEYPOOL_ADMIN = 'MONEYPOOL_ADMIN';\\n}\\n\",\"keccak256\":\"0x5b24ff283988463d8b45708ea52f67b01df6bde090222e90b381d3f90d98fcd0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610241806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806322aa8e7d1461006757806331e3ccf41461007c578063704b6c02146100a457806372411359146100b75780639aa360ec1461007c578063ae8b79971461007c575b600080fd5b61007a6100753660046101dd565b6100ca565b005b61009061008a3660046101dd565b50600090565b604051901515815260200160405180910390f35b61007a6100b23660046101dd565b610115565b61007a6100c53660046101dd565b610168565b6100de6610d3d55390d25360ca1b826101af565b6040516001600160a01b038216907f94b301526e028aec5a50c07590d098bdf8483f32485a8b8bba723955763063d590600090a250565b6101316e26a7a722aca827a7a62fa0a226a4a760891b826101af565b6040516001600160a01b038216907fbfc8d7754fec5096becc28e0816011e8d0adcfe752ffa1c88924a7f88b00a41d90600090a250565b6101786204353560ec1b826101af565b6040516001600160a01b038216907f3fb355092be60c4259fe899347c2331bc81470ca2ba603a31c6c3e58b308359990600090a250565b6000918252602082815260408084206001600160a01b0390931684529190529020805460ff19166001179055565b6000602082840312156101ee578081fd5b81356001600160a01b0381168114610204578182fd5b939250505056fea264697066735822122016f656f28864886e6c2133717eec2a00460d57062c3d25bcbb46a9fd4121e28364736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806322aa8e7d1461006757806331e3ccf41461007c578063704b6c02146100a457806372411359146100b75780639aa360ec1461007c578063ae8b79971461007c575b600080fd5b61007a6100753660046101dd565b6100ca565b005b61009061008a3660046101dd565b50600090565b604051901515815260200160405180910390f35b61007a6100b23660046101dd565b610115565b61007a6100c53660046101dd565b610168565b6100de6610d3d55390d25360ca1b826101af565b6040516001600160a01b038216907f94b301526e028aec5a50c07590d098bdf8483f32485a8b8bba723955763063d590600090a250565b6101316e26a7a722aca827a7a62fa0a226a4a760891b826101af565b6040516001600160a01b038216907fbfc8d7754fec5096becc28e0816011e8d0adcfe752ffa1c88924a7f88b00a41d90600090a250565b6101786204353560ec1b826101af565b6040516001600160a01b038216907f3fb355092be60c4259fe899347c2331bc81470ca2ba603a31c6c3e58b308359990600090a250565b6000918252602082815260408084206001600160a01b0390931684529190529020805460ff19166001179055565b6000602082840312156101ee578081fd5b81356001600160a01b0381168114610204578182fd5b939250505056fea264697066735822122016f656f28864886e6c2133717eec2a00460d57062c3d25bcbb46a9fd4121e28364736f6c63430008040033",
  "libraries": {},
  "devdoc": {
    "author": "ELYSIA",
    "kind": "dev",
    "methods": {},
    "title": "ELYFI Connector",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2526,
        "contract": "contracts/Connector.sol:Connector",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)2521_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)2521_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct ConnectorStorage.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)2521_storage"
      },
      "t_struct(RoleData)2521_storage": {
        "encoding": "inplace",
        "label": "struct ConnectorStorage.RoleData",
        "members": [
          {
            "astId": 2518,
            "contract": "contracts/Connector.sol:Connector",
            "label": "participants",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 2520,
            "contract": "contracts/Connector.sol:Connector",
            "label": "admin",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      }
    }
  }
}